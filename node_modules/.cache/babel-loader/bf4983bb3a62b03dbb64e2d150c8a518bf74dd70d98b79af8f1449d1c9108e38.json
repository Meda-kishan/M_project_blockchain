{"ast":null,"code":"var _jsxFileName = \"/home/meda/kishan/projects/Major project blockchain/src/components/VerifyProduct.js\",\n  _s = $RefreshSig$();\n// import React, {useState, useRef} from 'react'\n// // import { Html5QrcodeScanner } from 'html5-qrcode';\n// // import { useEffect } from 'react';\n// // import QRCode from \"qrcode\";\n// import QrScanner from 'qr-scanner';\n\n// // import QrReader from 'react-qr-reader';\n\n// // import  { Component } from 'react';\n\n// const VerifyProduct = ({ provider, central }) => {\n\n//     const [companyContractAddress, setCompanyContractAddress] = useState('');\n//     const [productId, setProductId] = useState('');\n\n//     const [productStatus, setProductStatus] = useState(null);\n//     //const [scannedData, setScannedData] = useState(null);\n\n//     // const handleScan = (data) => {\n//     //     setScannedData(data);\n//     // }\n\n//     function showErrorMessage(error) {\n//         alert(`An error occurred while connecting to MetaMask: ${error.message}`);\n//     }\n\n//     const handleInput1Change = (e) => {\n//         setCompanyContractAddress(e.target.value);\n//       };\n\n//       const handleInput2Change = (e) => {\n//         setProductId(e.target.value);\n//       };\n\n//     const checkProduct = async () => {\n//         try{\n//             debugger\n//             const result = await central.checkProduct(companyContractAddress, parseInt(productId));\n//             console.log(\"result\",result)\n//             setProductStatus(result);\n//         }catch(error){\n//             console.log(error);\n//             showErrorMessage(error);\n//         }\n\n//     }\n\n//     const [file, setFile] = useState(null);\n//     const [data, setData] = useState(null);\n//     const fileRef =useRef();\n\n//     const handleClick = () => {\n//         fileRef.current.click();\n//     };\n\n//     const handleChange = async (e) => {\n//         debugger\n//         const file = e.target.files[0];\n//         console.log(\"file\",file)\n//         debugger\n//         setFile(file);\n//         const result = await QrScanner.scanImage(file);\n//         setData(result);\n//     };\n\n//     return (\n//         <div className='VerifyProduct'>\n//             <h3 className='Component__title'>Verify Product</h3>\n//             <div className='Component__form'>\n//                 <div className='form__content'>\n//                     <label className='form__label'>Enter Company contract address</label>\n//                     <input type=\"text\" className='form__input' value={companyContractAddress} onChange={handleInput1Change} />\n//                 </div>\n//                 <div className='form__content'>\n//                     <label className='form__label'>Enter Product id</label>\n//                     <input type=\"text\"  className='form__input' value={productId} onChange={handleInput2Change} />\n//                 </div>\n\n//                 <div className='form__content'>\n//                     <h2 className='text-center mb-4'> Scan Your QR Code</h2>\n//                     <div className='card border-0'>\n//                         <div className=\"card-body\">\n//                             <button type='button' onClick={handleClick} className='btn btn-success'>\n//                                 Scan QRCode\n//                             </button>\n//                             <input type=\"file\"\n//                                 ref = {fileRef}\n//                                 onChange={handleChange}\n//                                 accept=\".png, .jpg, .jpeg\" \n//                                 className='d-none' />\n//                             <div className='mt-4'>\n//                                 {file && <img src={URL.createObjectURL(file)} alt=\"QR Code\" />}\n//                                 {data && <p className=\"small mt-5\">data: {data}</p>}\n//                             </div>\n//                         </div>\n//                     </div>\n//                     {/* {scannedData ? <p>Scanned data: {scannedData}</p> : <QRScanner onScan={handleScan} />} */}\n//                 </div>\n\n//                 <button className='button__toggle form__button' onClick={checkProduct}>Verify</button>\n//                 {productStatus && <p>Result: {productStatus}</p>}\n//             </div>\n//         </div>\n//     )\n// }\n\n// //Extra\n\n// // class QrContainer extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.state = {\n// //             result: 'Hold QR Code Steady and Clear to scan',\n// //         }\n// //         this.handleScan = this.handleScan.bind(this)\n// //     }\n// //     handleScan(result){\n// //         this.setState({\n// //             result: \"data\"\n// //         })\n// //     }\n// //     handleError(err){\n// //         console.error(err)\n// //     }\n// //     render(){\n// //         const previewStyle = {\n// //             height: 200,\n// //             width: 200,\n// //             display: 'flex',\n// //             \"justify-content\": \"center\"\n// //         }\n// //         const camStyle = {\n// //             display: 'flex',\n// //             justifyContent: \"center\",\n// //             marginTop: '-50px'\n// //         }\n\n// //         const textStyle = {\n// //             fontSize: '30px',\n// //             \"text-align\": 'center',\n// //             marginTop: '-50px'\n// //         }\n\n// //         return(\n// //             <React.Fragment>\n// //                 <div style={camStyle}>\n// //                     <QrReader\n// //                         delay={100}\n// //                         style={previewStyle}\n// //                         onError={this.handleError}\n// //                         onScan={this.handleScan}\n// //                         />\n// //                 </div>\n// //                 <p style={textStyle}>\n// //                     {this.state.result}\n// //                 </p>\n// //             </React.Fragment>\n// //         )\n// //     }\n// // }\n\n// export default VerifyProduct;\n\nimport React, { useState, useRef } from 'react';\nimport QrScanner from 'qr-scanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyProduct = ({\n  provider,\n  central\n}) => {\n  _s();\n  const [companyContractAddress, setCompanyContractAddress] = useState('');\n  const [productId, setProductId] = useState('');\n  const [productStatus, setProductStatus] = useState(null);\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState(null);\n  const fileRef = useRef();\n\n  // Function to handle input change for company contract address\n  const handleInput1Change = e => {\n    setCompanyContractAddress(e.target.value);\n  };\n\n  // Function to handle input change for product id\n  const handleInput2Change = e => {\n    setProductId(e.target.value);\n  };\n\n  // Function to check product status\n  const checkProduct = async () => {\n    try {\n      const result = await central.checkProduct(companyContractAddress, parseInt(productId));\n      setProductStatus(result);\n    } catch (error) {\n      console.log(error);\n      showErrorMessage(error);\n    }\n  };\n\n  // Function to handle file change for QR code scanning\n  const handleChange = async e => {\n    const file = e.target.files[0];\n    setFile(file);\n    const result = await QrScanner.scanImage(file);\n    setData(result);\n  };\n\n  // Function to show counterfeit popup\n  const showCounterfeitPopup = () => {\n    alert('The scanned product is counterfeit.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VerifyProduct\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Component__title\",\n      children: \"Verify Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Component__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          children: \"Enter Company contract address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form__input\",\n          value: companyContractAddress,\n          onChange: handleInput1Change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          children: \"Enter Product id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form__input\",\n          value: productId,\n          onChange: handleInput2Change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Scan Your QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card border-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleClick,\n              className: \"btn btn-success\",\n              children: \"Scan QRCode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileRef,\n              onChange: handleChange,\n              accept: \".png, .jpg, .jpeg\",\n              className: \"d-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [file && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(file),\n                alt: \"QR Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 42\n              }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small mt-5\",\n                children: [\"data: \", data]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button__toggle form__button\",\n        onClick: checkProduct,\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), productStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result: \", productStatus === 'Counterfeit' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showCounterfeitPopup,\n          children: \"Counterfeit Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 67\n        }, this) : productStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 9\n  }, this);\n};\n_s(VerifyProduct, \"38hkaofjM8ov54cP0DSbJkVi0rk=\");\n_c = VerifyProduct;\nexport default VerifyProduct;\nvar _c;\n$RefreshReg$(_c, \"VerifyProduct\");","map":{"version":3,"names":["React","useState","useRef","QrScanner","jsxDEV","_jsxDEV","VerifyProduct","provider","central","_s","companyContractAddress","setCompanyContractAddress","productId","setProductId","productStatus","setProductStatus","file","setFile","data","setData","fileRef","handleInput1Change","e","target","value","handleInput2Change","checkProduct","result","parseInt","error","console","log","showErrorMessage","handleChange","files","scanImage","showCounterfeitPopup","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","handleClick","ref","accept","src","URL","createObjectURL","alt","_c","$RefreshReg$"],"sources":["/home/meda/kishan/projects/Major project blockchain/src/components/VerifyProduct.js"],"sourcesContent":["// import React, {useState, useRef} from 'react'\n// // import { Html5QrcodeScanner } from 'html5-qrcode';\n// // import { useEffect } from 'react';\n// // import QRCode from \"qrcode\";\n// import QrScanner from 'qr-scanner';\n\n// // import QrReader from 'react-qr-reader';\n\n// // import  { Component } from 'react';\n\n\n\n// const VerifyProduct = ({ provider, central }) => {\n\n//     const [companyContractAddress, setCompanyContractAddress] = useState('');\n//     const [productId, setProductId] = useState('');\n\n//     const [productStatus, setProductStatus] = useState(null);\n//     //const [scannedData, setScannedData] = useState(null);\n\n//     // const handleScan = (data) => {\n//     //     setScannedData(data);\n//     // }\n\n//     function showErrorMessage(error) {\n//         alert(`An error occurred while connecting to MetaMask: ${error.message}`);\n//     }\n\n//     const handleInput1Change = (e) => {\n//         setCompanyContractAddress(e.target.value);\n//       };\n    \n//       const handleInput2Change = (e) => {\n//         setProductId(e.target.value);\n//       };\n    \n\n\n//     const checkProduct = async () => {\n//         try{\n//             debugger\n//             const result = await central.checkProduct(companyContractAddress, parseInt(productId));\n//             console.log(\"result\",result)\n//             setProductStatus(result);\n//         }catch(error){\n//             console.log(error);\n//             showErrorMessage(error);\n//         }\n        \n//     }\n\n//     const [file, setFile] = useState(null);\n//     const [data, setData] = useState(null);\n//     const fileRef =useRef();\n\n//     const handleClick = () => {\n//         fileRef.current.click();\n//     };\n\n//     const handleChange = async (e) => {\n//         debugger\n//         const file = e.target.files[0];\n//         console.log(\"file\",file)\n//         debugger\n//         setFile(file);\n//         const result = await QrScanner.scanImage(file);\n//         setData(result);\n//     };\n\n    \n\n//     return (\n//         <div className='VerifyProduct'>\n//             <h3 className='Component__title'>Verify Product</h3>\n//             <div className='Component__form'>\n//                 <div className='form__content'>\n//                     <label className='form__label'>Enter Company contract address</label>\n//                     <input type=\"text\" className='form__input' value={companyContractAddress} onChange={handleInput1Change} />\n//                 </div>\n//                 <div className='form__content'>\n//                     <label className='form__label'>Enter Product id</label>\n//                     <input type=\"text\"  className='form__input' value={productId} onChange={handleInput2Change} />\n//                 </div>\n                \n          \n//                 <div className='form__content'>\n//                     <h2 className='text-center mb-4'> Scan Your QR Code</h2>\n//                     <div className='card border-0'>\n//                         <div className=\"card-body\">\n//                             <button type='button' onClick={handleClick} className='btn btn-success'>\n//                                 Scan QRCode\n//                             </button>\n//                             <input type=\"file\"\n//                                 ref = {fileRef}\n//                                 onChange={handleChange}\n//                                 accept=\".png, .jpg, .jpeg\" \n//                                 className='d-none' />\n//                             <div className='mt-4'>\n//                                 {file && <img src={URL.createObjectURL(file)} alt=\"QR Code\" />}\n//                                 {data && <p className=\"small mt-5\">data: {data}</p>}\n//                             </div>\n//                         </div>\n//                     </div>\n//                     {/* {scannedData ? <p>Scanned data: {scannedData}</p> : <QRScanner onScan={handleScan} />} */}\n//                 </div>\n\n//                 <button className='button__toggle form__button' onClick={checkProduct}>Verify</button>\n//                 {productStatus && <p>Result: {productStatus}</p>}\n//             </div>\n//         </div>\n//     )\n// }\n\n// //Extra\n\n// // class QrContainer extends Component {\n// //     constructor(props){\n// //         super(props)\n// //         this.state = {\n// //             result: 'Hold QR Code Steady and Clear to scan',\n// //         }\n// //         this.handleScan = this.handleScan.bind(this)\n// //     }\n// //     handleScan(result){\n// //         this.setState({\n// //             result: \"data\"\n// //         })\n// //     }\n// //     handleError(err){\n// //         console.error(err)\n// //     }\n// //     render(){\n// //         const previewStyle = {\n// //             height: 200,\n// //             width: 200,\n// //             display: 'flex',\n// //             \"justify-content\": \"center\"\n// //         }\n// //         const camStyle = {\n// //             display: 'flex',\n// //             justifyContent: \"center\",\n// //             marginTop: '-50px'\n// //         }\n\n// //         const textStyle = {\n// //             fontSize: '30px',\n// //             \"text-align\": 'center',\n// //             marginTop: '-50px'\n// //         }\n\n// //         return(\n// //             <React.Fragment>\n// //                 <div style={camStyle}>\n// //                     <QrReader\n// //                         delay={100}\n// //                         style={previewStyle}\n// //                         onError={this.handleError}\n// //                         onScan={this.handleScan}\n// //                         />\n// //                 </div>\n// //                 <p style={textStyle}>\n// //                     {this.state.result}\n// //                 </p>\n// //             </React.Fragment>\n// //         )\n// //     }\n// // }\n\n// export default VerifyProduct;\n\nimport React, { useState, useRef } from 'react';\nimport QrScanner from 'qr-scanner';\n\nconst VerifyProduct = ({ provider, central }) => {\n    const [companyContractAddress, setCompanyContractAddress] = useState('');\n    const [productId, setProductId] = useState('');\n    const [productStatus, setProductStatus] = useState(null);\n    const [file, setFile] = useState(null);\n    const [data, setData] = useState(null);\n    const fileRef = useRef();\n\n    // Function to handle input change for company contract address\n    const handleInput1Change = (e) => {\n        setCompanyContractAddress(e.target.value);\n    };\n\n    // Function to handle input change for product id\n    const handleInput2Change = (e) => {\n        setProductId(e.target.value);\n    };\n\n    // Function to check product status\n    const checkProduct = async () => {\n        try {\n            const result = await central.checkProduct(companyContractAddress, parseInt(productId));\n            setProductStatus(result);\n        } catch (error) {\n            console.log(error);\n            showErrorMessage(error);\n        }\n    };\n\n    // Function to handle file change for QR code scanning\n    const handleChange = async (e) => {\n        const file = e.target.files[0];\n        setFile(file);\n        const result = await QrScanner.scanImage(file);\n        setData(result);\n    };\n\n    // Function to show counterfeit popup\n    const showCounterfeitPopup = () => {\n        alert('The scanned product is counterfeit.');\n    };\n\n    return (\n        <div className='VerifyProduct'>\n            <h3 className='Component__title'>Verify Product</h3>\n            <div className='Component__form'>\n                <div className='form__content'>\n                    <label className='form__label'>Enter Company contract address</label>\n                    <input type=\"text\" className='form__input' value={companyContractAddress} onChange={handleInput1Change} />\n                </div>\n                <div className='form__content'>\n                    <label className='form__label'>Enter Product id</label>\n                    <input type=\"text\" className='form__input' value={productId} onChange={handleInput2Change} />\n                </div>\n                \n                <div className='form__content'>\n                    <h2 className='text-center mb-4'>Scan Your QR Code</h2>\n                    <div className='card border-0'>\n                        <div className=\"card-body\">\n                            <button type='button' onClick={handleClick} className='btn btn-success'>\n                                Scan QRCode\n                            </button>\n                            <input type=\"file\" ref={fileRef} onChange={handleChange} accept=\".png, .jpg, .jpeg\" className='d-none' />\n                            <div className='mt-4'>\n                                {file && <img src={URL.createObjectURL(file)} alt=\"QR Code\" />}\n                                {data && <p className=\"small mt-5\">data: {data}</p>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <button className='button__toggle form__button' onClick={checkProduct}>Verify</button>\n                {productStatus && (\n                    <p>Result: {productStatus === 'Counterfeit' ? <button onClick={showCounterfeitPopup}>Counterfeit Product</button> : productStatus}</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default VerifyProduct;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAIA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}